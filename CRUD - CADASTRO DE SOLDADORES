#include <stdio.h>
#include <string.h>

#define MAX 10

struct Soldador {
    char nome[30];
    char sinete[3];          // 2 caracteres + '\0'
    char qualificacao[30];
    char validade[11];       // dd/mm/aaaa + '\0'
};

struct Soldador soldadores[MAX];
int quantidadedesoldadores = 0;

void cadastrarSoldador() {
    if (quantidadedesoldadores >= MAX) {
        printf("Limite de %d soldadores atingido.\n", MAX);
        return;
    }

    printf("\n--- CADASTRO DE SOLDADOR ---\n");

    printf("Nome: ");
    scanf(" %29[^\n]", soldadores[quantidadedesoldadores].nome);

    printf("Sinete: ");
    scanf(" %2s", soldadores[quantidadedesoldadores].sinete);

    printf("Qualificacao: ");
    scanf(" %29[^\n]", soldadores[quantidadedesoldadores].qualificacao);

    printf("Validade (dd/mm/aaaa): ");
    scanf(" %10s", soldadores[quantidadedesoldadores].validade);

    quantidadedesoldadores++;
    printf("Soldador cadastrado com sucesso.\n");
}

void listarSoldadores() {
    printf("\n--- SOLDADORES CADASTRADOS ---\n");

    if (quantidadedesoldadores == 0) {
        printf("Nenhum soldador cadastrado.\n");
        return;
    }

    for (int i = 0; i < quantidadedesoldadores; i++) {
        printf("Número: %d | Nome: %s | Sinete: %s | Qualificacao: %s | Validade: %s\n",
               i + 1,
               soldadores[i].nome,
               soldadores[i].sinete,
               soldadores[i].qualificacao,
               soldadores[i].validade);
    }
}

void editarSoldador() {
    int index;

    printf("\n--- EDITAR SOLDADOR ---\n");
    listarSoldadores();

    if (quantidadedesoldadores == 0) {
        return;
    }

    printf("Escolha o número do soldador para editar: ");
    scanf("%d", &index);
    while(getchar() != '\n'); // Limpa o buffer

    if (index < 1 || index > quantidadedesoldadores) {
        printf("Índice inválido.\n");
        return;
    }

    // Ajusta para índice 0
    index--;

    printf("Novo Nome: ");
    scanf(" %29[^\n]", soldadores[index].nome);

    printf("Novo Sinete: ");
    scanf(" %2s", soldadores[index].sinete);

    printf("Nova Qualificação: ");
    scanf(" %29[^\n]", soldadores[index].qualificacao);

    printf("Nova Validade (dd/mm/aaaa): ");
    scanf(" %10s", soldadores[index].validade);

    printf("Soldador editado com sucesso.\n");
}

void excluirSoldador() {
    int index;

    printf("\n--- EXCLUIR SOLDADOR ---\n");
    listarSoldadores();

    if (quantidadedesoldadores == 0) {
        return;
    }

    printf("Escolha o número do soldador para excluir: ");
    scanf("%d", &index);
    while(getchar() != '\n'); // Limpa o buffer

    if (index < 1 || index > quantidadedesoldadores) {
        printf("Índice inválido.\n");
        return;
    }

    // Ajusta para índice 0
    index--;

    // Remover o soldador (shift para a esquerda)
    for (int i = index; i < quantidadedesoldadores - 1; i++) {
        soldadores[i] = soldadores[i + 1];
    }

    quantidadedesoldadores--;
    printf("Soldador excluído com sucesso.\n");
}

int main() {
    int op;

    do {
        printf("\n----------- MENU PRINCIPAL -----------\n");
        printf("1. Cadastrar Soldador\n");
        printf("2. Listar Soldadores\n");
        printf("3. Editar\n");
        printf("4. Excluir\n");
        printf("0. Sair\n");
        printf("--------------------------------------\n");
        printf("Opcao: ");
        scanf("%d", &op);
        while(getchar() != '\n'); // Limpa o buffer do teclado

        switch (op) {
            case 1: cadastrarSoldador(); break;
            case 2: listarSoldadores(); break;
            case 3: editarSoldador(); break;
            case 4: excluirSoldador(); break;
            case 0: printf("\nEncerrando sistema...\n"); break;
            default: printf("\nOpcao invalida! Tente novamente.\n");
        }

    } while (op != 0);

    printf("\nObrigado por utilizar o sistema!\n");
    return 0;
}
